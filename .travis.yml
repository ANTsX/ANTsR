# ANTsR Build
language: r
sudo: required
cache:
  - timeout: 1000
  - packages
  - ccache
warnings_are_errors: true
bioc_required: false
cran: http://cran.rstudio.com

os:
  - linux
  - osx

r:
  - oldrel
  - release
  - devel

matrix:
  allow_failures:
    - r: devel
    - os: osx

latex: false
compiler: clang
osx_image: xcode9

env:
  global:
  - R_BUILD_ARGS=" --no-build-vignettes --no-manual "
  - R_CHECK_ARGS=" --timings --as-cran --no-manual --install-args=--build"
  - R_CHECK_TIME="TRUE"
  - R_CHECK_TESTS="TRUE"
  - _R_CHECK_TIMINGS_="0"
  - BOOTSTRAP_LATEX=1
  - DISPLAY=:99.0
  - _R_CHECK_FORCE_SUGGESTS_="0"

before_install:
  - ulimit -n 2048
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export PROJ_DIR=`basename ${TRAVIS_BUILD_DIR}`
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - export rver=`r_version`;
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}
  - start_xvfb ;
  - v8_install ;
  - cat DESCRIPTION
  - export PACKAGE_NAME=`package_name`
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
  # does all the clang exports
  - x=`export_clang_cxx`; eval ${x}
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      no_open_mp ;
    fi
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - clang_cxx
  - hdf5_install ;
  - export cmake_version="3.11"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - ./cleanup
  - Rscript -e "install.packages(c('Rcpp', 'RcppEigen'), type = 'source', repos=c(CRAN='https://cran.rstudio.com'))"
  - Rscript -e "install.packages( c('magrittr','testthat','knitr','rmarkdown','covr','devtools', 'desc',  'remotes', 'colormap' ), repos=c(CRAN='https://cran.rstudio.com'))"
  - Rscript -e 'install.packages("rsvd")'
  - Rscript -e 'install.packages("magic")'
  - Rscript -e 'install.packages("ggplot2")'
  - Rscript -e 'install.packages("psych")'
  - Rscript -e 'install.packages("randomForest")'
  - cd ..
  - git clone https://github.com/muschellij2/ghtravis.git
  - R CMD INSTALL ghtravis
  - cd ANTsR
  - gh_binary_install  stnava/ITKR ANTsX/ANTsRCore
  - export ants_user=ANTsX
  - echo "Done Binary Installs"

install:
  - echo "skip this"

script:
  - x=`export_clang_cxx`; eval ${x}
  - travis_wait 100 R CMD build ${R_BUILD_ARGS} .
  - rm -f travis_wait*.log
  - PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)
  - ls
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
  - cat /home/travis/build/ANTsX/ANTsR/ANTsR.Rcheck/00install.out
  - rm -f travis_wait*.log
  - if [[ $CHECK_RET -ne 0 ]];
    then
      echo "R CMD check failed";
      check_fail;
      dump_logs;
      check_warnings ;
      travis_terminate 1;
    fi


after_failure:
  - dump_logs

after_success:
  - dump_logs
  - ls
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1);
  - PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tar.gz/_'"R${rver}"'.tar.gz/'` ;
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      PKG_FILE_NAME=$(ls -1t *.tgz | head -n  1);
      PKG_TARBALL_WITH_R=`echo $PKG_FILE_NAME | sed 's/.tgz/_'"R${rver}"'.tgz/'` ;
    fi
  - mv ${PKG_FILE_NAME} ${PKG_TARBALL_WITH_R} ;
  - PKG_FILE_NAME=${PKG_TARBALL_WITH_R}

notifications:
  email:
    recipients:
    - muschellij2@gmail.com
    - stnava@gmail.com
    - arman.eshaghi@gmail.com
    - jeff.duda@gmail.com
    on_success: change
    on_failure: always

# so no overwrite of linux build
before_deploy:
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      rm -f *.tar.gz;
    fi

deploy:
  provider: releases
  api_key:
    secure: VevZHK5WDwd2mFSrF3+b2jTRzImb6juOgewcOvZ8LJ2S70khn64Kx4+JGUvk5miKWVbKnHIhPxOJY50muO9sT15ApP+HFZYpiVpx4l/hEypk9zmJD+f+ERuN7j8elCzUZqet3v77XD+pBcYMxFARew4gGDkG2LO5casij0YNiyQ=
  file: ${PKG_FILE_NAME}
  skip_cleanup: true
  on:
    tags: true
    repo: ANTsX/${PROJ_DIR}
    all_branches: true
