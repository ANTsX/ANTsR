language: r
# use containers
sudo: false
# cache local R libraries directory:
cache:
  - packages
  - ccache
cache:
  timeout: 1000  
warnings_are_errors: true
bioc_required: false
cran: http://cran.rstudio.com
# dist: precise
allow_failures:
  - os: osx

os:
  - linux
  - osx

latex: false
compiler: clang
osx_image: xcode9

r_build_args: --no-build-vignettes --no-manual
env:
  global:
  - R_BUILD_ARGS=" --no-build-vignettes --no-manual "
  - R_CHECK_ARGS=" --timings --as-cran --no-manual"
  - R_CHECK_TIME="TRUE"
  - R_CHECK_TESTS="TRUE"
  - _R_CHECK_TIMINGS_="0"
  - _R_CHECK_FORCE_SUGGESTS_="0"
  - BOOTSTRAP_LATEX=1
  # - WARNINGS_ARE_ERRORS=0


before_install:
  - export ORIG_PATH=${PATH}
  - export CCACHE=ccache
  - export PROJ_DIR=`basename ${TRAVIS_BUILD_DIR}`  
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}
  # does all the clang exports
  - x=`export_clang_cxx`; eval ${x}
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - clang_cxx
  - export cmake_version="3.4"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - ./cleanup  
  - export PACKAGE_NAME=`package_name`
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck    
  - gh_binary_install stnava/ITKR
  - gh_binary_install stnava/ANTsRCore
  - install_remotes_no_dep
  - echo $PATH ;
  - if [ "$TRAVIS_OS_NAME" == "osx" ];
    then
      brew install ccache;
      export PATH="/usr/local/opt/ccache/libexec:$PATH";
    fi
  - travis_run_cache  
  # - gh_binary_install ITKR ANTsRCore

before_script:
  - cat ~/.R/Makevars
  # - source ~/.R/Makevars
  - x=`export_clang_cxx`; eval ${x}
  - cd ..

# Build and check package
script:
  - travis_wait 100 R CMD build ${PROJ_DIR} ${R_BUILD_ARGS}
  - rm -f travis_wait*.log
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)  
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_FILE_NAME}";
  - rm -f travis_wait*.log
  - check_fail
  - check_warnings

jobs:
  include:
    - name: "linux"
      os: linux
    - name: "OSX"
      os: osx
    - stage: "Deployment"
      if: tag IS present
      script:
        - travis_wait 100 R CMD INSTALL --debug --build ${PROJ_DIR};
      deploy:
        provider: releases
        api_key:
          secure: VevZHK5WDwd2mFSrF3+b2jTRzImb6juOgewcOvZ8LJ2S70khn64Kx4+JGUvk5miKWVbKnHIhPxOJY50muO9sT15ApP+HFZYpiVpx4l/hEypk9zmJD+f+ERuN7j8elCzUZqet3v77XD+pBcYMxFARew4gGDkG2LO5casij0YNiyQ=
        file_glob: true    
        file: ${PROJ_DIR}*.t*gz
        skip_cleanup: true
        overwrite: true
        on:
          repo: ANTsX/${PROJ_DIR}
          tags: true
          all_branches: true
      os: linux
    - stage: "Deployment"
      if: tag IS present
      script:
        - travis_wait 100 R CMD INSTALL --debug --build ${PROJ_DIR};
      deploy:
        provider: releases
        api_key:
          secure: VevZHK5WDwd2mFSrF3+b2jTRzImb6juOgewcOvZ8LJ2S70khn64Kx4+JGUvk5miKWVbKnHIhPxOJY50muO9sT15ApP+HFZYpiVpx4l/hEypk9zmJD+f+ERuN7j8elCzUZqet3v77XD+pBcYMxFARew4gGDkG2LO5casij0YNiyQ=
        file_glob: true    
        file: ${PROJ_DIR}*.t*gz
        skip_cleanup: true
        overwrite: true
        on:
          repo: ANTsX/${PROJ_DIR}
          tags: true
          all_branches: true
      os: osx        

## muschelli secure
## qYN5fyhnulu35DVfh5gmhR35AMLs486cFl1MkQCQ58owdX33hV6dzPM/ERKeQTchNZ29zIiKbvB75/g5QeLR5z3ywpm4San2hlywWQtYXzGyDK3+k9l9I1LY5AKgQhhPMPxKCmEXJOhG/2hF041rSYpPUfcGb+9coQZea8EO9Tub1eziHV3OqKbe2Bh7k5YM0b6vDw934SDFOhV2hXmR8uG52eBC2g30rbnkUy4byAYyf2do1fFRiaMNnkWlA15FM/o0HLsAFKJgmXHi48l6yiRA/1lQBquCfVvW8c27fnVqV95/1oTrt+cLoGIRwxz7cLeO+kZniY9qCFrxEcOMFx82ODsUHLSliWMs1G6v8ZCzHzSFZE8yJdPyoj70cSmq9I296cMKCjpEGDb5eQ2MtbK/DlMLpUaOmI8IS+DANYYetJU415Br3WO31HhMNrQ6hm8QPrFVZs2uHamlZYn1R4gwuiRc4ln3V5gvVpKYxf0hr7wbu9ZiA8Oe2FeuvC2J6mNAkCnKUXrbpVntI00hFdhotzzssyGmGdJDDZI7Kuu42w8E2AXaZ2tC4o/i7fwJsCSgXrlM97cPInylCegmR19yiP3oUPrnifedFY/UHqjgyajQX0QukUggf9p/KBT4iEtUGyET+/QwSokj3aAOa7aMFJo/Ybp7Z/8Bgny30b4=
## ANTsX secure
## VevZHK5WDwd2mFSrF3+b2jTRzImb6juOgewcOvZ8LJ2S70khn64Kx4+JGUvk5miKWVbKnHIhPxOJY50muO9sT15ApP+HFZYpiVpx4l/hEypk9zmJD+f+ERuN7j8elCzUZqet3v77XD+pBcYMxFARew4gGDkG2LO5casij0YNiyQ=
# report coverage rate to coveralls
# after_success:
  # - cd $mydir
#  - cd ANTsR
#  - travis_wait 100 Rscript -e 'covr::coveralls( type = "examples" )'
# takes too long, should add to matrix

after_success:
  - cat ${PACKAGE_NAME}.Rcheck/00install.out
  - cat ${PACKAGE_NAME}.Rcheck/00check.log
  - cat ${PACKAGE_NAME}.Rcheck/00_pkg_src/${PACKAGE_NAME}/src/Makevars

after_success:
  - cat ${PACKAGE_NAME}.Rcheck/00install.out
  - cat ${PACKAGE_NAME}.Rcheck/00check.log
  - cat ${PACKAGE_NAME}.Rcheck/00_pkg_src/${PACKAGE_NAME}/src/Makevars


# send e-mails if stuff changes

notifications:
  email:
    recipients:
    - muschellij2@gmail.com
    - stnava@gmail.com
    - arman.eshaghi@gmail.com    
    - jeff.duda@gmail.com    
    on_success: change
    on_failure: always
