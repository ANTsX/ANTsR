# use containers
sudo: false

os:
  - linux
  - osx

# use c as catch-all language
language: cpp

compiler:
  - clang

matrix:
  allow_failures:
    - os: osx

# only run for pushes to master branch
# branches:
#  only:
#   - master

addons:
  apt:
    sources:
    - r-packages-precise
    packages:
    - cmake
    - r-base-dev
    - r-recommended
    - pandoc

# cache local R libraries directory:
cache:
  directories:
    - ~/Rlib

before_install:
  - basedir=${PWD}
  - cd ..
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake --version; wget --no-check-certificate https://cmake.org/files/v3.4/cmake-3.4.0-rc1-Linux-x86_64.sh; sh cmake-3.4.0-rc1-Linux-x86_64.sh --skip-license --prefix=${HOME}; export PATH=$HOME/bin/:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ];  then cmake --version;  curl -OL http://raw.github.com/craigcitro/r-travis/master/scripts/travis-tool.sh ; chmod 755 ./travis-tool.sh;  ./travis-tool.sh bootstrap; fi
  - export PATH=$HOME/bin/:$PATH
  - cd $basedir

# install the package and dependencies:
# - create directory for R libraries (if not already exists)
# - create .Renviron with location of R libraries
# - define R repository in .Rprofile
# - add .travis.yml to .Rbuildignore
# - install devtools if not already installed
# - install covr if not already installed
# - update all installed packages
# - install package with dependencies
install:
  - mkdir -p ~/.R
  - export CC=clang
  - export CXX=clang++
  - echo "CC=clang" >  ~/.R/Makevars
  - echo "CXX=clang++" >> ~/.R/Makevars
  - source ~/.R/Makevars
  - mkdir -p ~/Rlib
  - echo 'R_LIBS=~/Rlib' > .Renviron
  - echo 'R_LIBS_USER="~/Rlib"' >>  $HOME/.Renviron
  - echo 'options(repos = "http://cran.rstudio.com")' > .Rprofile
  - echo '.travis.yml' > .Rbuildignore
  - Rscript -e 'if(!"Rcpp" %in% rownames(installed.packages())) { install.packages("Rcpp", dependencies = TRUE) }'
  - Rscript -e 'if(!"knitr" %in% rownames(installed.packages())) { install.packages("knitr", dependencies = TRUE) }'
  - Rscript -e 'if(!"ggplot2" %in% rownames(installed.packages())) { install.packages("ggplot2", dependencies = TRUE) }'
  - Rscript -e 'if(!"igraph" %in% rownames(installed.packages())) { install.packages("igraph", dependencies = TRUE) }'
  - Rscript -e 'if(!"pracma" %in% rownames(installed.packages())) { install.packages("pracma", dependencies = TRUE) }'
  - Rscript -e 'if(!"dplyr" %in% rownames(installed.packages())) { install.packages("dplyr", dependencies = TRUE) }'
  - Rscript -e 'if(!"mFilter" %in% rownames(installed.packages())) { install.packages("mFilter", dependencies = TRUE) }'
  - Rscript -e 'if(!"rmarkdown" %in% rownames(installed.packages())) { install.packages("rmarkdown", dependencies = TRUE) }'
  - Rscript -e 'if(!"magrittr" %in% rownames(installed.packages())) { install.packages("magrittr", dependencies = TRUE) }'
  - Rscript -e 'if(!"testthat" %in% rownames(installed.packages())) { install.packages("testthat", dependencies = TRUE) }'
  - Rscript -e 'if(!"randomForest" %in% rownames(installed.packages())) { install.packages("randomForest", dependencies = TRUE) }'
#  - Rscript -e 'if(!"devtools" %in% rownames(installed.packages())) { install.packages("devtools", dependencies = TRUE) }'
#  - Rscript -e 'if(!"covr" %in% rownames(installed.packages())) { install.packages("covr", dependencies = TRUE) }'
  - Rscript -e 'update.packages(ask = FALSE, instlib = "~/Rlib")'
#  - Rscript -e 'devtools::install_deps(pkg = ".", dependencies = TRUE)'
  - cd ~/
  - itkrrel=v0.0.1-alpha
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://github.com/stnava/ITKR/releases/download/${itkrrel}/ITKR_0.0_R_x86_64-unknown-linux-gnu.tar.gz; R CMD INSTALL --library=~/Rlib ITKR_0.0_R_x86_64-unknown-linux-gnu.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then osxitkr=ITKR_0.0_OSX_ElCapitan.tgz; Rscript -e 'download.file("https://github.com/stnava/ITKR/releases/download/v0.0.1-alpha/ITKR_0.0_OSX_ElCapitan.tgz", "ITKR_0.0_OSX_ElCapitan.tgz", quiet = FALSE, mode = "wb")'; R CMD INSTALL --library=~/Rlib ${osxitkr}; fi
  - cd ${basedir}

# Build and check package
script:
  - source ~/.R/Makevars
  - export CXX=clang++
  - export CC=clang
  - cd ..
  - travis_wait 100 R CMD build ANTsR --no-build-vignettes --no-manual
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
  - travis_wait 100 R CMD check "${PKG_FILE_NAME}" --no-build-vignettes --no-manual # --as-cran

# report coverage rate to coveralls
after_success:
#  - Rscript -e 'covr::coveralls(exclusions = "src/RcppExports.cpp")'

after_failure:
#  - ./travis-tool.sh dump_logs
  - cat /home/travis/build/stnava/ANTsR.Rcheck/00install.out
  - cat /home/travis/build/stnava/ANTsR.Rcheck/00check.log
  - cat /Users/travis/build/stnava/ANTsR.Rcheck/00install.out
  - cat /Users/travis/build/stnava/ANTsR.Rcheck/00check.log
  - cat ~/ANTsR.Rcheck/00install.out
  - cat ~/ANTsR.Rcheck/00check.log

# send e-mails if stuff changes
notifications:
  email:
    recipients:
    - stnava@gmail.com
    - arman.eshaghi@gmail.com
    - jeff.duda@gmail.com
    on_success: change
    on_failure: always

env:
  global:
  - R_BUILD_ARGS=" "
  - R_CHECK_ARGS=" --timings"
  - R_CHECK_TIME="TRUE"
  - R_CHECK_TESTS="TRUE"
  - _R_CHECK_TIMINGS_="0"
  - _R_CHECK_FORCE_SUGGESTS_="0"
  - BOOTSTRAP_LATEX=1
  - WARNINGS_ARE_ERRORS=0
deploy:
  provider: releases
  api_key:
    secure: VevZHK5WDwd2mFSrF3+b2jTRzImb6juOgewcOvZ8LJ2S70khn64Kx4+JGUvk5miKWVbKnHIhPxOJY50muO9sT15ApP+HFZYpiVpx4l/hEypk9zmJD+f+ERuN7j8elCzUZqet3v77XD+pBcYMxFARew4gGDkG2LO5casij0YNiyQ=
  file: ${PKG_FILE_NAME}
  skip_cleanup: true
  on:
    tags: true
#    repo: stnava/ANTsR
