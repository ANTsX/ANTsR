% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiscaleSVDxpts.R, R/multiscaleSVDxpts_temp.R
\name{milr.predict}
\alias{milr.predict}
\title{Predict from a milr output}
\usage{
milr.predict(milrResult, dataFrameTrain, voxmatsTrain, dataFrameTest,
  voxmatsTest, myFormula)

milr.predict(milrResult, dataFrameTrain, voxmatsTrain, dataFrameTest,
  voxmatsTest, myFormula)
}
\arguments{
\item{milrResult}{This output form milr}

\item{dataFrameTrain}{This data frame contains all relevant predictors
in the training data except for the matrices associated with the image variables.}

\item{voxmatsTrain}{The named list of matrices that contains the changing predictors.}

\item{dataFrameTest}{This data frame contains all relevant predictors
in the training data except for the matrices associated with the image variables in test data.}

\item{voxmatsTest}{The named list of matrices that contains the changing predictors in test data.}

\item{myFormula}{This is a character string that defines a valid regression formula.}

\item{milrResult}{This output form milr}

\item{dataFrameTrain}{This data frame contains all relevant predictors
in the training data except for the matrices associated with the image variables.}

\item{voxmatsTrain}{The named list of matrices that contains the changing predictors.}

\item{dataFrameTest}{This data frame contains all relevant predictors
in the training data except for the matrices associated with the image variables in test data.}

\item{voxmatsTest}{The named list of matrices that contains the changing predictors in test data.}

\item{myFormula}{This is a character string that defines a valid regression formula.}
}
\value{
the predicted matrix.

the predicted matrix.
}
\description{
This function computes a prediction or low-dimensional embedding, given
\code{milr} output.  It will return a predictive model if the outcome variable
is a scalar.  Otherwise, it will return a low-dimensional embedding without
a specific predictive model.

This function computes a prediction or low-dimensional embedding, given
\code{milr} output.  It will return a predictive model if the outcome variable
is a scalar.  Otherwise, it will return a low-dimensional embedding without
a specific predictive model.
}
\examples{

nsub = 24
npix = 100
outcome = rnorm( nsub )
covar = rnorm( nsub )
mat = replicate( npix, rnorm( nsub ) )
mat2 = replicate( npix, rnorm( nsub ) )
mat3 = replicate( npix, rnorm( nsub ) )
myform = " vox2 ~ covar + vox + vox3 "
istr = c( rep( TRUE, round(nsub*2/3) ), rep( FALSE, nsub - round(nsub*2/3)) )
df = data.frame( outcome = outcome, covar = covar )
ltr = list( vox = mat[ istr,], vox2 = mat2[istr,], vox3 = mat3[istr,] )
lte = list( vox = mat[!istr,], vox2 = mat2[!istr,], vox3 = mat3[!istr,]  )
result = milr( df[istr,], ltr, myform)
pred = milr.predict( result, df[istr,],ltr, df[!istr,], lte, myform )


nsub = 24
npix = 100
outcome = rnorm( nsub )
covar = rnorm( nsub )
mat = replicate( npix, rnorm( nsub ) )
mat2 = replicate( npix, rnorm( nsub ) )
mat3 = replicate( npix, rnorm( nsub ) )
myform = " vox2 ~ covar + vox + vox3 "
istr = c( rep( TRUE, round(nsub*2/3) ), rep( FALSE, nsub - round(nsub*2/3)) )
df = data.frame( outcome = outcome, covar = covar )
ltr = list( vox = mat[ istr,], vox2 = mat2[istr,], vox3 = mat3[istr,] )
lte = list( vox = mat[!istr,], vox2 = mat2[!istr,], vox3 = mat3[!istr,]  )
result = milr( df[istr,], ltr, myform)
pred = milr.predict( result, df[istr,],ltr, df[!istr,], lte, myform )

}
\seealso{
\code{\link{milr}}

\code{\link{milr}}
}
\author{
BB Avants.

BB Avants.
}
