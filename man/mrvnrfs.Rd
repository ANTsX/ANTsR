% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/mrvnrfs.R
\name{mrvnrfs}
\alias{mrvnrfs}
\title{multi-res voxelwise neighborhood random forest segmentation learning}
\usage{
mrvnrfs(y, x, labelmasks, rad = NA, nsamples = 1, ntrees = 500,
  multiResSchedule = c(4, 2, 1), asFactors = TRUE, voxchunk = 1000)
}
\arguments{
\item{y}{list of training labels. either an image or numeric value}

\item{x}{a list of lists where each list contains feature images}

\item{labelmasks}{a list of masks where each mask defines the image space
for the given list. that is, the nth mask indexes the nth feature set.}

\item{rad}{vector of dimensionality d define nhood radius}

\item{nsamples}{(per subject to enter training)}

\item{ntrees}{(for the random forest model)}

\item{multiResSchedule}{an integer vector defining multi-res levels}

\item{asFactors}{boolean - treat the y entries as factors}

\item{voxchunk}{split up prediction by this number of voxels per chunk}
}
\value{
list a 4-list with the rf model, training vector, feature matrix
and the random mask
}
\description{
Represents multiscale feature images as a neighborhood and uses the features
to build a random forest segmentation model from an image population
}
\examples{
mask<-makeImage( c(10,10), 0 )
mask[ 3:6, 3:6 ]<-1
mask[ 5, 5:6]<-2
ilist<-list()
lablist<-list()
masklist<-list()
inds<-1:50
scl<-0.33 # a noise parameter
for ( predtype in c("label","scalar") )
{
for ( i in inds ) {
  img<-antsImageClone(mask)
  imgb<-antsImageClone(mask)
  limg<-antsImageClone(mask)
  if ( predtype == "label") {  # 4 class prediction
    img[ 3:6, 3:6 ]<-rnorm(16)*scl+(i \%\% 4)+scl*mean(rnorm(1))
    imgb[ 3:6, 3:6 ]<-rnorm(16)*scl+(i \%\% 4)+scl*mean(rnorm(1))
    limg[ 3:6, 3:6 ]<-(i \%\% 4)+1  # the label image is constant
    }
    if ( predtype == "scalar") {
      img[ 3:6, 3:6 ]<-rnorm(16,1)*scl*(i)+scl*mean(rnorm(1))
      imgb[ 3:6, 3:6 ]<-rnorm(16,1)*scl*(i)+scl*mean(rnorm(1))
      limg<-i^2.0  # a real outcome
      }
    ilist[[i]]<-list(img,imgb)  # two features
    lablist[[i]]<-limg
    masklist[[i]] = mask
  }
rad<-rep( 1, 2 )
mr <- c(1.5,1)
rfm<-mrvnrfs( lablist , ilist, masklist, rad=rad, multiResSchedule=mr,
     asFactors = (  predtype == "label" ) )
rfmresult<-mrvnrfs.predict( rfm$rflist,
     ilist, masklist, rad=rad, asFactors=(  predtype == "label" ),
     multiResSchedule=mr )
if ( predtype == "scalar" )
  print( cor( unlist(lablist) , unlist(rfmresult$seg) ) )
} # end predtype loop
}
\author{
Avants BB, Tustison NJ
}

