% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiscaleSVDxpts.R
\name{NNHEmbed}
\alias{NNHEmbed}
\title{Perform SiMLR Analysis on Multimodal ANTsPyMM Data}
\usage{
NNHEmbed(
  blaster,
  select_training_boolean,
  connect_cog,
  energy,
  nsimlr,
  constraint,
  covariates = "1",
  myseed = 3,
  doAsym = TRUE,
  returnidps = 0,
  restrictDFN = FALSE,
  resnetGradeThresh = 1.02,
  doperm = FALSE,
  exclusions = NULL,
  inclusions = NULL,
  sparseness = NULL,
  mixAlg = NULL,
  iterations = NULL,
  path_modeling = NULL,
  sparsenessAlg = "soft",
  optimizationStyle = NULL,
  domainMatrices = NULL,
  domainLambdas = NULL,
  verbose = FALSE
)
}
\arguments{
\item{blaster}{A dataframe containing multimodal data for analysis.}

\item{select_training_boolean}{boolean vector to define which entries are in training data}

\item{connect_cog}{Vector of column names to be treated as a special target matrix;  often used for cognitive data and in a superivsed variant of simlr.  Exclude this argument if this is unclear.}

\item{energy}{The type of energy model to use for similarity analysis. Usually 'reg' or 'cca'.
Other options include 'lrr', 'regression', 'nc', 'base.pca', 'base.spca', 'base.rand.1', and 'base.rand.0'.}

\item{nsimlr}{Number of components.}

\item{constraint}{orthogonality constraint of the form constraintxFloatWeightEnergyxFloatWeightGrad where constraints is ortho, Stiefel or Grassmann or GrassmannInv}

\item{covariates}{any covariates to adjust training matrices. if covariates is set to 'mean' then the rowwise mean will be factored out of each matrix.  this can be a vector e.g. \code{c('center','scale','rank')}. pass the name opt to NNHEmbed_update_residuals to have the function print the options.}

\item{myseed}{Seed for random number generation to ensure reproducibility. Defaults to 3.}

\item{doAsym}{integer 0 for FALSE, 1 for TRUE and 2 for separate matrices for asymm variables.}

\item{returnidps}{Integer indicating whether to return the idp names (1) or matrices (2) or neither (0). Defaults to 0.}

\item{restrictDFN}{Logical indicating whether to restrict analysis to default network features. Defaults to FALSE.}

\item{resnetGradeThresh}{image quality threshold (higher better).}

\item{doperm}{Logical indicating whether to perform permutation tests. Defaults to FALSE.  Will randomize image features in the training data and thus leads to "randomized" but still regularized projections.}

\item{exclusions}{vector of strings to exclude from predictors}

\item{inclusions}{vector of strings to include in predictors}

\item{sparseness}{vector or scalar value to set sparseness.}

\item{mixAlg}{string 'svd', 'ica', 'rrpca-l', 'rrpca-s', 'stochastic', 'pca' or 'avg' denotes the algorithm employed when estimating the mixed modality bases}

\item{iterations}{int value to set max iterations}

\item{path_modeling}{the result of a call to \code{simlr_path_models(n)}}

\item{sparsenessAlg}{NA is default otherwise basic, spmp or orthorank}

\item{optimizationStyle}{see \code{list_simlr_optimizers}}

\item{domainMatrices}{matrices containing domain knowledge length of \code{data_matrices} with number of columns also equal to each corresponding data matrix}

\item{domainLambdas}{weights for domain knowledge term length of \code{data_matrices}}

\item{verbose}{boolean}
}
\value{
A list containing the results of the similarity analysis and related data.
}
\description{
This function processes multimodal data using SiMLR. It is designed
to be flexible, allowing for various preprocessing steps and analysis options. The analysis
can be adjusted through multiple parameters, offering control over the inclusion of certain
data types, permutation testing, and more.
}
\examples{
# Example usage:
# result <- NNHEmbed(dataframe)
}
