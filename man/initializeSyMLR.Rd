% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiscaleSVDxpts.R, R/multiscaleSVDxpts_temp.R
\name{initializeSyMLR}
\alias{initializeSyMLR}
\title{Initialize SyMLR}
\usage{
initializeSyMLR(voxmats, k, jointReduction = TRUE, zeroUpper = FALSE,
  uAlgorithm = "pca")

initializeSyMLR(voxmats, k, jointReduction = TRUE, zeroUpper = FALSE,
  uAlgorithm = "pca")
}
\arguments{
\item{voxmats}{list that contains the named matrices.}

\item{k}{rank of U matrix}

\item{jointReduction}{boolean determining whether one or length of list bases are}

\item{zeroUpper}{boolean determining whether upper triangular part of
initialization is zeroed out}

\item{uAlgorithm}{either \code{"random"} \code{"pca"} (default), \code{"ica"} or \code{"cca"}}

\item{voxmats}{list that contains the named matrices.}

\item{k}{rank of U matrix}

\item{jointReduction}{boolean determining whether one or length of list bases are}

\item{zeroUpper}{boolean determining whether upper triangular part of
initialization is zeroed out}

\item{uAlgorithm}{either \code{"random"} \code{"pca"} (default), \code{"ica"} or \code{"cca"}}
}
\value{
A single matrix or list of matrices

A single matrix or list of matrices
}
\description{
Four initialization approaches for SyMLR.  Returns either a single matrix
derived from dimensionality reduction on all matrices
(\code{jointReduction=TRUE}) or a list of reduced
dimensionality matrices, one for each input.  Either PCA or ICA can be used
as the reduction method.

Four initialization approaches for SyMLR.  Returns either a single matrix
derived from dimensionality reduction on all matrices
(\code{jointReduction=TRUE}) or a list of reduced
dimensionality matrices, one for each input.  Either PCA or ICA can be used
as the reduction method.
}
\examples{

set.seed(1500)
nsub = 3
npix = c(10,6,13)
nk = 2
outcome = initializeSyMLR(
  list( matrix(rnorm( nsub * npix[1] ),ncol=npix[1]),
        matrix(rnorm( nsub * npix[2] ),ncol=npix[2]),
        matrix(rnorm( nsub * npix[3] ),ncol=npix[3]) ),
  k = 2, uAlgorithm = 'pca' )


set.seed(1500)
nsub = 3
npix = c(10,6,13)
nk = 2
outcome = initializeSyMLR(
  list( matrix(rnorm( nsub * npix[1] ),ncol=npix[1]),
        matrix(rnorm( nsub * npix[2] ),ncol=npix[2]),
        matrix(rnorm( nsub * npix[3] ),ncol=npix[3]) ),
  k = 2, uAlgorithm = 'pca' )

}
\author{
BB Avants.

BB Avants.
}
