% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitTransformToPairedPoints.R
\name{fitTransformToPairedPoints}
\alias{fitTransformToPairedPoints}
\title{fitTransformToPairedPoints}
\usage{
fitTransformToPairedPoints(
  movingPoints,
  fixedPoints,
  transformType = "affine",
  regularization = 0.000001,
  domainImage = NULL,
  numberOfFittingLevels = 4,
  meshSize = 1,
  splineOrder = 3,
  enforceStationaryBoundary = TRUE,
  displacementWeights = NULL,
  numberOfIterations = 10,
  gradientStep = 0.5,
  smoothingFactor = 3
)
}
\arguments{
\item{movingPoints}{moving points specified in physical space as a \code{n x d}
matrix where \code{n} is the number of points and \code{d} is the dimensionality.}

\item{fixedPoints}{fixed points specified in physical space as a \code{n x d}
matrix where \code{n} is the number of points and \code{d} is the dimensionality.}

\item{transformType}{'rigid', 'similarity', "affine', 'bspline', or 'diffeo'.}

\item{regularization}{ridge penalty in [0,1] for linear transforms.}

\item{domainImage}{defines physical domain of the B-spline transform.}

\item{numberOfFittingLevels}{integer specifying the number of fitting levels
(B-spline only).}

\item{meshSize}{scalar or vector defining the mesh size at the initial fitting level
(B-spline only).}

\item{splineOrder}{spline order of the B-spline object.  Default = 3 (B-spline
only).}

\item{enforceStationaryBoundary}{ensure no displacements on the image boundary
(B-spline only).}

\item{displacementWeights}{vector defining the individual weighting of the corresponding
scattered data value.  (B-spline only).  Default = NULL meaning all displacements are
weighted the same.}

\item{numberOfIterations}{total number of iterations for the diffeomorphic transform.}

\item{gradientStep}{scalar multiplication factor for the diffeomorphic transform.}

\item{sigma}{gaussian smoothing sigma (in mm) for the diffeomorphic transform.}
}
\value{
object containing ANTsR transform, error, and scale (or displacement field)
}
\description{
Estimate a transform using paired point sets.  An ANTsR transform is returned.
}
\examples{
fixed <- matrix( c( 50, 50, 200, 50, 50, 200 ), ncol = 2, byrow = TRUE )
moving <- matrix( c( 75, 75, 175, 75, 75, 175 ), ncol = 2, byrow = TRUE )

# Affine transform
xfrm <- fitTransformToPairedPoints( moving, fixed, transformType = "Affine", regularization = 0 )
error <- norm( moving - applyAntsrTransformToPoint( xfrm, fixed ), "F" ) / nrow( fixed )
params <- getAntsrTransformParameters( xfrm )

# Rigid transform
xfrm <- fitTransformToPairedPoints( moving, fixed, transformType = "Rigid", regularization = 0 )
error <- norm( moving - applyAntsrTransformToPoint( xfrm, fixed ), "F" ) / nrow( fixed )
params <- getAntsrTransformParameters( xfrm )

# Similarity transform
xfrm <- fitTransformToPairedPoints( moving, fixed, transformType = "Similarity", regularization = 0 )
error <- norm( moving - applyAntsrTransformToPoint( xfrm, fixed ), "F" ) / nrow( fixed )
params <- getAntsrTransformParameters( xfrm )

# B-spline transform
domainImage <- antsImageRead( getANTsRData( "r16" ) )
xfrm <- fitTransformToPairedPoints( moving, fixed, transformType = "Bspline", domainImage = domainImage, numberOfFittingLevels = 5 )
error <- norm( moving - applyAntsrTransformToPoint( xfrm, fixed ), "F" ) / nrow( fixed )

# Diffeo transform
domainImage <- antsImageRead( getANTsRData( "r16" ) )
xfrm <- fitTransformToPairedPoints( moving, fixed, transformType = "Diffeo", domainImage = domainImage, numberOfFittingLevels = 6 )
error <- norm( moving - applyAntsrTransformToPoint( xfrm, fixed ), "F" ) / nrow( fixed )

}
\author{
B Avants
}
