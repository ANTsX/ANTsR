% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/sparseDecom.R
\name{sparseDecom}
\alias{sparseDecom}
\title{Convenience wrapper for eigenanatomy decomposition.}
\usage{
sparseDecom(inmatrix = NA, inmask = 0, sparseness = 0.01, nvecs = 50,
  its = 5, cthresh = 250, statdir = NA, z = 0, smooth = 0,
  initializationList = list(), mycoption = 0, robust = 0, ell1 = 1)
}
\arguments{
\item{inmatrix}{n by p input images , subjects or time points by row ,
spatial variable lies along columns}

\item{inmask}{optional antsImage mask}

\item{sparseness}{lower values equal more sparse}

\item{nvecs}{number of vectors}

\item{its}{number of iterations}

\item{cthresh}{cluster threshold}

\item{statdir}{place on disk to save results}

\item{z}{u penalty, experimental}

\item{smooth}{smoothness eg 0.5}

\item{initializationList}{see initializeEigenanatomy}

\item{mycoption}{0, 1 or 2 all produce different output 0 is combination
of 1 (spatial orthogonality) and 2 (subject space orthogonality)}

\item{robust}{rank transform input data - good for data checking}

\item{ell1}{the ell1 grad descent param}
}
\value{
outputs a decomposition of a population or time series matrix
}
\description{
Decomposes a matrix into sparse eigenevectors to maximize explained
variance.
}
\examples{
mat<-replicate(100, rnorm(20))
mydecom<-sparseDecom( mat )
# for prediction
if ( usePkg("randomForest") & usePkg("spls")  & usePkg('BGLR') ) {
data(lymphoma) # from spls
training<-sample( rep(c(TRUE,FALSE),31)  )
sp<-0.02 ; myz<-0
ldd<-sparseDecom( lymphoma$x[training,], nvecs=5 , sparseness=( sp ),
  mycoption=1, z=myz ) # NMF style
traindf<-data.frame( lclass=as.factor(lymphoma$y[ training  ]),
  eig = lymphoma$x[training,]  \%*\% as.matrix(ldd$eigenanatomyimages ))
testdf<-data.frame(  lclass=as.factor(lymphoma$y[ !training ]),
 eig = lymphoma$x[!training,] \%*\% as.matrix(ldd$eigenanatomyimages ))
myrf<-randomForest( lclass ~ . ,   data=traindf )
predlymp<-predict(myrf, newdata=testdf)
print(paste('N-errors:',sum(abs( testdf$lclass != predlymp ) ),
  ' non-zero ',sum(abs( ldd$eigenanatomyimages ) > 0 ) ) )
# compare to http://arxiv.org/pdf/0707.0701v2.pdf
# now SNPs
data(mice)
snps<-quantifySNPs( mice.X, shiftit =T )
numericalpheno<-as.matrix( mice.pheno[,c(4,5,13,15) ] )
nfolds<-6
train<-sample( rep( c(1:nfolds), 1800/nfolds ) )
train<-( train < 4 )
lrmat<-lowrankRowMatrix( as.matrix( snps[train,] ) ,  50 )
snpd<-sparseDecom( lrmat, nvecs=20 , sparseness=( 0.001), z=-1 )
projmat<-as.matrix( snpd$eig )
snpse<-as.matrix( snps[train, ]  ) \%*\% projmat
traindf<-data.frame( bmi=numericalpheno[train,3] , snpse=snpse)
snpse<-as.matrix( snps[!train, ]  ) \%*\% projmat
testdf <-data.frame( bmi=numericalpheno[!train,3] , snpse=snpse )
myrf<-randomForest( bmi ~ . , data=traindf )
preddf<-predict(myrf, newdata=testdf )
cor.test(preddf, testdf$bmi )
plot(preddf, testdf$bmi )
}
}
\author{
Avants BB
}

