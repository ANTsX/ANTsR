% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiscaleSVDxpts.R
\name{l1_normalize_features}
\alias{l1_normalize_features}
\title{L1 Normalize Columns of a Matrix}
\usage{
l1_normalize_features(features)
}
\arguments{
\item{features}{A numeric matrix or a data frame that can be coerced into one.
The normalization is applied column-wise.}
}
\value{
A matrix with the same dimensions as the input, where each column has
  been L1-normalized.
}
\description{
This function scales the columns of a numeric matrix such that the sum of the
absolute values of each column (the L1 norm) is equal to 1. This is a common
preprocessing step for feature matrices.
}
\details{
The function is designed to be highly efficient by using vectorized operations.
It also robustly handles columns that sum to zero to prevent division-by-zero errors.
}
\examples{
# Create a sample feature matrix
set.seed(123)
my_features <- matrix(rnorm(12, mean = 5), nrow = 4, ncol = 3)
print(my_features)
#>           [,1]     [,2]     [,3]
#> [1,] 4.4395244 5.487429 5.704929
#> [2,] 5.2325834 6.738325 5.558708
#> [3,] 3.4291247 5.575781 4.129288
#> [4,] 5.5060559 4.694612 4.261173

# Check the column sums of absolute values before normalization
print(colSums(abs(my_features)))
#> [1] 18.60729 22.49615 19.65410

# Apply L1 normalization
normalized_features <- l1_normalize_features(my_features)
print(normalized_features)
#>            [,1]      [,2]      [,3]
#> [1,] 0.23859089 0.2439247 0.2800889
#> [2,] 0.28121151 0.2995321 0.2891398
#> [3,] 0.18429107 0.2478546 0.2151676
#> [4,] 0.29590653 0.2086886 0.2221037

# Confirm that the new column sums of absolute values are all 1
print(colSums(abs(normalized_features)))
#> [1] 1 1 1
}
