% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/antsrSurf.R
\name{antsrVol}
\alias{antsrVol}
\title{Render an image volume with or without overlay.}
\usage{
antsrVol(x, y, quantlimits = c(0.1, 0.9), colormap = "jet",
  rotationParams = c(270, 0, 270), overlayLimits = NA,
  magnificationFactor = 1, intensityTruncation = c(0, 1), filename = NA,
  antspath = NA, verbose = FALSE)
}
\arguments{
\item{x}{input antsImage defining the image to render}

\item{y}{input antsImage list defining the function to render
on the image. these image(s) should be in the same space.}

\item{quantlimits}{lower and upper quantile limits for overlay}

\item{colormap}{character, one of: grey, red, green, blue, copper, jet, hsv,
spring, summer, autumn, winter, hot, cool, overunder, custom}

\item{rotationParams}{3 Rotation angles expressed in degrees or a matrix of
rotation parameters that will be applied in sequence.}

\item{overlayLimits}{absolute lower and upper limits for functional overlay.
this parameter will override \code{quantlimits}.  Currently, this will set
levels above \code{overlayLimits[2]} to \code{overlayLimits[2]}.}

\item{magnificationFactor}{zooms in on image during rendering}

\item{intensityTruncation}{lower and upper quantiles at which to truncate intensity}

\item{filename}{prefix filename for output pngs}

\item{antspath}{pass the ANTSPATH here otherwise we try to detect it from environment}

\item{verbose}{prints the command used to call \code{antsVol}}
}
\value{
no output
}
\description{
Use a system call to \code{antsVol} in order to render an image.  This
requires \code{antsVol} to be in the environment as well as
\code{ConvertScalarImageToRGB}, both available in Advanced Normalization
Tools software on github.
}
\examples{

\dontrun{
ch2i = antsImageRead( getANTsRData("mni") )
ch2seg = thresholdImage( ch2i, "Otsu", 3 )
wm   = thresholdImage( ch2seg, 3, 3 )
kimg = weingartenImageCurvature( ch2i, 1.5  ) \%>\% smoothImage( 1 )
ap = path.expand( "~/code/ants-src/bin/" )
rp0 = matrix( c(90,180,90), ncol = 3 )
rp2 = matrix( c(0,0,0), ncol = 3 )
rp3 = matrix( c(270,90,90), ncol = 3 )
rp  = rbind( rp0, rp2, rp3 ) # pass these as rotationParams
antsrVol( wm, list( kimg ), quantlimits=c(0.01,0.99) )
}

}
\author{
Avants BB, Tustison NJ
}
