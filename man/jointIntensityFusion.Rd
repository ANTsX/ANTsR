% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/jointIntensityFusion.R
\name{jointIntensityFusion}
\alias{jointIntensityFusion}
\title{joint intensity fusion}
\usage{
jointIntensityFusion(targetI, targetIMask, atlasList, beta = 4, rad = NA,
  labelList = NA, doscale = TRUE, doNormalize = TRUE,
  maxAtlasAtVoxel = c(1, Inf), rho = 0.01, useSaferComputation = FALSE,
  usecor = FALSE, boundary.condition = "mean")
}
\arguments{
\item{targetI}{antsImage to be approximated}

\item{targetIMask}{mask with value 1}

\item{atlasList}{list containing antsImages}

\item{beta}{weight sharpness, default to 2}

\item{rad}{neighborhood radius, default to 4}

\item{labelList}{list containing antsImages}

\item{doscale}{scale neighborhood intensities}

\item{doNormalize}{normalize each image range to 0, 1}

\item{maxAtlasAtVoxel}{min/max n atlases to use at each voxel}

\item{rho}{ridge penalty increases robustness to outliers but also
makes image converge to average}

\item{useSaferComputation}{slower but more error checking}

\item{usecor}{employ correlation as local similarity}

\item{boundary.condition}{one of 'image' 'mean' 'NA'}
}
\value{
approximated image, segmentation and probabilities
}
\description{
Estimates an image from another set of images - intensity generalization of joint label fusion.  Search radius used only when employing labels - WIP to speed it up.
}
\examples{
set.seed(123)
ref<-antsImageRead( getANTsRData('r16'), 2)
ImageMath(2,ref,"Normalize",ref)
mi<-antsImageRead( getANTsRData('r27'),  2)
mi2<-antsImageRead( getANTsRData('r30') ,2)
mi3<-antsImageRead( getANTsRData('r62') ,2)
mi4<-antsImageRead( getANTsRData('r64') ,2)
mi5<-antsImageRead( getANTsRData('r85') ,2)
refmask<-getMask(ref,mean(ref) )
ilist<-list(mi,mi2,mi3,mi4,mi5)
km<-"kmeans[3]"; mrf<-"[0.2,1x1]"; conv<-"[5,0]"
seglist<-list()
for ( i in 1:length(ilist) )
 {
 ImageMath(2,ilist[[i]],"Normalize",ilist[[i]])
 mytx<-antsRegistration(fixed=fi , moving=mi ,
 typeofTransform = c("SyN"),
 outprefix=tempfile())
 mywarpedimage<-antsApplyTransforms(fixed=fi,moving=mi,
   transformlist=mytx$fwdtransforms)
 ilist[[i]]=mywarpedimage
 seg<-Atropos( d = 2, a = ilist[[i]],   m = mrf, c =conv,  i = km, x = refmask)
 seglist[[i]]<-seg$segmentation
 }
r<-4
d<-2
pp<-jointIntensityFusion(ref,refmask,ilist,
  labelList=seglist, rad=rep(r,d), useSaferComputation=T )
mm<-imageListToMatrix(ilist,refmask)
avg<-makeImage(refmask,colMeans(mm)) # compare to pp[[1]]
# save memory by separating masks
refmaske<-antsImageClone(refmask)
ImageMath(d,refmaske,"ME",refmask,15)
refmask[refmaske==1]<-0
pp1<-jointIntensityFusion(ref,refmask,ilist,
  beta=2,rad=rep(r,d))
pp2<-jointIntensityFusion(ref,refmaske,ilist,
  beta=2,rad=rep(r,d))
pp1[[1]][refmaske==1]<-pp2[[1]][refmaske==1]
}
\author{
Brian B. Avants, Hongzhi Wang, Paul Yushkevich
}
\keyword{fusion,}
\keyword{template}

