% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/antsImage_class.R
\docType{class}
\name{antsImage-class}
\alias{!=,antsImage,ANY-method}
\alias{<,antsImage,ANY-method}
\alias{<=,antsImage,ANY-method}
\alias{==,antsImage,ANY-method}
\alias{>,antsImage,ANY-method}
\alias{>=,antsImage,ANY-method}
\alias{antsImage-class}
\alias{as.array,antsImage-method}
\alias{as.matrix,antsImage-method}
\alias{as.numeric,antsImage-method}
\alias{dim,antsImage-method}
\alias{initialize,antsImage-method}
\alias{is.na,antsImage-method}
\alias{max,antsImage-method}
\alias{mean,antsImage-method}
\alias{min,antsImage-method}
\alias{sd,antsImage-method}
\alias{show,antsImage-method}
\alias{var,antsImage-method}
\title{An S4 class for an antsImage}
\usage{
\S4method{show}{antsImage}(object)

\S4method{initialize}{antsImage}(.Object, pixeltype = "float",
  dimension = 3)

\S4method{dim}{antsImage}(x)

\S4method{min}{antsImage}(x)

\S4method{max}{antsImage}(x)

\S4method{var}{antsImage}(x)

\S4method{sd}{antsImage}(x)

\S4method{mean}{antsImage}(x, mask = logical())

\S4method{is.na}{antsImage}(x)

\S4method{as.numeric}{antsImage}(x, mask = logical(),
  region = new("antsRegion", index = integer(), size = integer()))

\S4method{as.matrix}{antsImage}(x, mask = logical(),
  region = new("antsRegion", index = integer(), size = integer()))

\S4method{as.array}{antsImage}(x, mask = logical(),
  region = new("antsRegion", index = integer(), size = integer()))

\S4method{==}{antsImage,ANY}(e1, e2)

\S4method{!=}{antsImage,ANY}(e1, e2)

\S4method{<=}{antsImage,ANY}(e1, e2)

\S4method{>=}{antsImage,ANY}(e1, e2)

\S4method{<}{antsImage,ANY}(e1, e2)

\S4method{>}{antsImage,ANY}(e1, e2)
}
\arguments{
\item{object}{input object to convert}

\item{.Object}{input object to convert}

\item{pixeltype}{string e.g. "float" "unsigned char" "int"}

\item{dimension}{dimensionality of the image}

\item{x}{input object to convert}

\item{mask}{mask for the region}

\item{region}{antsRegion for the image}

\item{e1}{internal control for types}

\item{e2}{internal control for types}

\item{i}{the slowest moving index to the image}

\item{j}{the next slowest moving index to the image, similar for k}
}
\description{
C++ type used to represent an ITK image pointed to by 'pointer'. the
actual image is of C++ type 'itk::image< pixeltype , dimension >::Pointer'
}
\section{Methods (by generic)}{
\itemize{
\item \code{show}: 

\item \code{initialize}: 

\item \code{dim}: 

\item \code{min}: 

\item \code{max}: 

\item \code{var}: 

\item \code{sd}: 

\item \code{mean}: 

\item \code{is.na}: 

\item \code{as.numeric}: 

\item \code{as.matrix}: 

\item \code{as.array}: 

\item \code{==}: 

\item \code{!=}: 

\item \code{<=}: 

\item \code{>=}: 

\item \code{<}: 

\item \code{>}: 
}}
\section{Slots}{

\describe{
\item{\code{pixeltype}}{usually float, can be other types unsigned char, int, double
etc noting that short is not supported}

\item{\code{dimension}}{usually 2 or 3 but can be 4}

\item{\code{pointer}}{the memory location}
}}

