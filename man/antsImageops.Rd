% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz_Arith.R, R/zzz_Comparison.R, R/zzz_finite.R
\name{antsImage-operators}
\alias{antsImage-operators}
\alias{Arith,antsImage,antsImage-method}
\alias{+,antsImage,antsImage-method}
\alias{Arith,antsImage,numeric-method}
\alias{-,antsImage,antsImage-method}
\alias{*,antsImage,antsImage-method}
\alias{/,antsImage,antsImage-method}
\alias{^,antsImage,antsImage-method}
\alias{\%\%,antsImage,antsImage-method}
\alias{\%/\%,antsImage,antsImage-method}
\alias{+,antsImage,numeric-method}
\alias{-,antsImage,numeric-method}
\alias{*,antsImage,numeric-method}
\alias{/,antsImage,numeric-method}
\alias{^,antsImage,numeric-method}
\alias{\%\%,antsImage,numeric-method}
\alias{\%/\%,antsImage,numeric-method}
\alias{+,numeric,antsImage-method}
\alias{-,numeric,antsImage-method}
\alias{*,numeric,antsImage-method}
\alias{/,numeric,antsImage-method}
\alias{^,numeric,antsImage-method}
\alias{\%\%,numeric,antsImage-method}
\alias{\%/\%,numeric,antsImage-method}
\alias{Arith,antsImage,missing-method}
\alias{Arith,numeric,antsImage-method}
\alias{Arith,antsImage,logical-method}
\alias{Arith,logical,antsImage-method}
\alias{Arith,antsImage,array-method}
\alias{Arith,array,antsImage-method}
\alias{Arith,list,antsImage-method}
\alias{Arith,antsImage,list-method}
\alias{==,antsImage,antsImage-method}
\alias{==,antsImage,list-method}
\alias{==,antsImage,array-method}
\alias{==,array,antsImage-method}
\alias{==,antsImage,ANY-method}
\alias{==,ANY,antsImage-method}
\alias{>,antsImage,antsImage-method}
\alias{>,antsImage,list-method}
\alias{>,antsImage,array-method}
\alias{>,array,antsImage-method}
\alias{>,antsImage,ANY-method}
\alias{>,ANY,antsImage-method}
\alias{<,antsImage,antsImage-method}
\alias{<,antsImage,list-method}
\alias{<,antsImage,array-method}
\alias{<,array,antsImage-method}
\alias{<,antsImage,ANY-method}
\alias{<,ANY,antsImage-method}
\alias{!=,antsImage,antsImage-method}
\alias{!=,antsImage,list-method}
\alias{!=,antsImage,array-method}
\alias{!=,array,antsImage-method}
\alias{!=,antsImage,ANY-method}
\alias{!=,ANY,antsImage-method}
\alias{<=,antsImage,antsImage-method}
\alias{<=,antsImage,list-method}
\alias{<=,antsImage,array-method}
\alias{<=,array,antsImage-method}
\alias{<=,antsImage,ANY-method}
\alias{<=,ANY,antsImage-method}
\alias{>=,antsImage,antsImage-method}
\alias{>=,antsImage,list-method}
\alias{>=,antsImage,array-method}
\alias{>=,array,antsImage-method}
\alias{>=,antsImage,ANY-method}
\alias{>=,ANY,antsImage-method}
\alias{is.na,antsImage-method}
\alias{anyNA,antsImage-method}
\alias{is.nan,antsImage-method}
\alias{is.infinite,antsImage-method}
\alias{is.finite,antsImage-method}
\title{Operations for antsImage Objects}
\usage{
\S4method{Arith}{antsImage,antsImage}(e1, e2)

\S4method{+}{antsImage,antsImage}(e1, e2)

\S4method{-}{antsImage,antsImage}(e1, e2)

\S4method{*}{antsImage,antsImage}(e1, e2)

\S4method{/}{antsImage,antsImage}(e1, e2)

\S4method{^}{antsImage,antsImage}(e1, e2)

\S4method{\%\%}{antsImage,antsImage}(e1, e2)

\S4method{\%/\%}{antsImage,antsImage}(e1, e2)

\S4method{Arith}{antsImage,numeric}(e1, e2)

\S4method{+}{antsImage,numeric}(e1, e2)

\S4method{-}{antsImage,numeric}(e1, e2)

\S4method{*}{antsImage,numeric}(e1, e2)

\S4method{/}{antsImage,numeric}(e1, e2)

\S4method{^}{antsImage,numeric}(e1, e2)

\S4method{\%\%}{antsImage,numeric}(e1, e2)

\S4method{\%/\%}{antsImage,numeric}(e1, e2)

\S4method{+}{numeric,antsImage}(e1, e2)

\S4method{-}{numeric,antsImage}(e1, e2)

\S4method{*}{numeric,antsImage}(e1, e2)

\S4method{/}{numeric,antsImage}(e1, e2)

\S4method{^}{numeric,antsImage}(e1, e2)

\S4method{\%\%}{numeric,antsImage}(e1, e2)

\S4method{\%/\%}{numeric,antsImage}(e1, e2)

\S4method{Arith}{antsImage,missing}(e1, e2)

\S4method{Arith}{numeric,antsImage}(e1, e2)

\S4method{Arith}{antsImage,logical}(e1, e2)

\S4method{Arith}{logical,antsImage}(e1, e2)

\S4method{Arith}{antsImage,array}(e1, e2)

\S4method{Arith}{array,antsImage}(e1, e2)

\S4method{Arith}{list,antsImage}(e1, e2)

\S4method{Arith}{antsImage,list}(e1, e2)

\S4method{==}{antsImage,antsImage}(e1, e2)

\S4method{==}{antsImage,list}(e1, e2)

\S4method{==}{antsImage,array}(e1, e2)

\S4method{==}{array,antsImage}(e1, e2)

\S4method{==}{antsImage,ANY}(e1, e2)

\S4method{==}{ANY,antsImage}(e1, e2)

\S4method{>}{antsImage,antsImage}(e1, e2)

\S4method{>}{antsImage,list}(e1, e2)

\S4method{>}{antsImage,array}(e1, e2)

\S4method{>}{array,antsImage}(e1, e2)

\S4method{>}{antsImage,ANY}(e1, e2)

\S4method{>}{ANY,antsImage}(e1, e2)

\S4method{<}{antsImage,antsImage}(e1, e2)

\S4method{<}{antsImage,list}(e1, e2)

\S4method{<}{antsImage,array}(e1, e2)

\S4method{<}{array,antsImage}(e1, e2)

\S4method{<}{antsImage,ANY}(e1, e2)

\S4method{<}{ANY,antsImage}(e1, e2)

\S4method{!=}{antsImage,antsImage}(e1, e2)

\S4method{!=}{antsImage,list}(e1, e2)

\S4method{!=}{antsImage,array}(e1, e2)

\S4method{!=}{array,antsImage}(e1, e2)

\S4method{!=}{antsImage,ANY}(e1, e2)

\S4method{!=}{ANY,antsImage}(e1, e2)

\S4method{<=}{antsImage,antsImage}(e1, e2)

\S4method{<=}{antsImage,list}(e1, e2)

\S4method{<=}{antsImage,array}(e1, e2)

\S4method{<=}{array,antsImage}(e1, e2)

\S4method{<=}{antsImage,ANY}(e1, e2)

\S4method{<=}{ANY,antsImage}(e1, e2)

\S4method{>=}{antsImage,antsImage}(e1, e2)

\S4method{>=}{antsImage,list}(e1, e2)

\S4method{>=}{antsImage,array}(e1, e2)

\S4method{>=}{array,antsImage}(e1, e2)

\S4method{>=}{antsImage,ANY}(e1, e2)

\S4method{>=}{ANY,antsImage}(e1, e2)

\S4method{is.na}{antsImage}(x)

\S4method{anyNA}{antsImage}(x, recursive = FALSE)

\S4method{is.nan}{antsImage}(x)

\S4method{is.infinite}{antsImage}(x)

\S4method{is.finite}{antsImage}(x)
}
\arguments{
\item{e1}{is an object of class \code{antsImage}.}

\item{e2}{is an object of class \code{antsImage}.}

\item{recursive}{not used}
}
\description{
Overloaded operators for antsImage objects
}
\examples{

img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
img02 <- as.antsImage(array(64:1, c(4, 4, 4, 1)))
is.antsImage(img01 + img02)
is.antsImage(sqrt(2) * img01)
is.antsImage(img02 / pi)
img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
et <- function(x) {
  testthat::expect_true(x)
}
x <- is.antsImage(img01 == img01)
et(x)
x <- is.antsImage(img01 == as.array(img01))
et(x)
x <- is.antsImage(img01 == 1)
et(x)
x <- is.antsImage(1 == img01)
et(x)
x <- is.antsImage(as.array(img01) == img01)
et(x)

x <- is.antsImage(img01 >= img01)
et(x)
x <- is.antsImage(img01 >= as.array(img01))
et(x)
x <- is.antsImage(img01 >= 1)
et(x)
x <- is.antsImage(1 >= img01)
et(x)
x <- is.antsImage(as.array(img01) >= img01)
et(x)

x <- is.antsImage(img01 > img01)
et(x)
x <- is.antsImage(img01 > as.array(img01))
et(x)
x <- is.antsImage(img01 > 1)
et(x)
x <- is.antsImage(1 > img01)
et(x)
x <- is.antsImage(as.array(img01) > img01)
et(x)

x <- is.antsImage(img01 < img01)
et(x)
x <- is.antsImage(img01 < as.array(img01))
et(x)
x <- is.antsImage(img01 < 1)
et(x)
x <- is.antsImage(1 < img01)
et(x)
x <- is.antsImage(as.array(img01) < img01)
et(x)


x <- is.antsImage(img01 <= img01)
et(x)
x <- is.antsImage(img01 <= as.array(img01))
et(x)
x <- is.antsImage(1 <= img01)
et(x)
x <- is.antsImage(img01 <= 1)
et(x)
x <- is.antsImage(as.array(img01) <= img01)
et(x)

x <- is.antsImage(img01 != img01)
et(x)
x <- is.antsImage(img01 != as.array(img01))
et(x)
x <- is.antsImage(1 != img01)
et(x)
x <- is.antsImage(img01 != 1)
et(x)
x <- is.antsImage(as.array(img01) != img01)
et(x)

###########################
# Multi image operations
########################
fname <- system.file("extdata",
  "multi_component_image.nii.gz",
  package = "ANTsRCore"
)
img <- antsImageRead(fname)

testthat::expect_is(img > 0, "antsImage")
testthat::expect_is(0 < img, "antsImage")
testthat::expect_is(img > c(0, 0), "antsImage")

testthat::expect_is(img >= 0, "antsImage")
testthat::expect_is(0 <= img, "antsImage")
testthat::expect_is(img >= c(0, 0), "antsImage")

testthat::expect_is(img < 0, "antsImage")
testthat::expect_is(0 > img, "antsImage")
testthat::expect_is(img < c(0, 0), "antsImage")

testthat::expect_is(img <= 0, "antsImage")
testthat::expect_is(0 >= img, "antsImage")
testthat::expect_is(img <= c(0, 0), "antsImage")

testthat::expect_is(img == 0, "antsImage")
testthat::expect_is(0 == img, "antsImage")
testthat::expect_is(img == c(0, 0), "antsImage")

testthat::expect_is(img != 0, "antsImage")
testthat::expect_is(0 != img, "antsImage")
testthat::expect_is(img != c(0, 0), "antsImage")

img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
testthat::expect_error(img01 == list())
img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
testthat::expect_error(img01 > list())
img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
testthat::expect_error(img01 < list())
img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
testthat::expect_error(img01 != list())
img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
testthat::expect_error(img01 <= list())
img01 <- as.antsImage(array(1:64, c(4, 4, 4, 1)))
testthat::expect_error(img01 >= list())
}
\author{
John Muschellli \email{muschellij2@gmail.com}
}
