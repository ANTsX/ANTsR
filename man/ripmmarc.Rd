% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ripmmarc.R
\name{ripmmarc}
\alias{ripmmarc}
\title{Rotation Invariant Patch-based Multi-Modality Analysis aRChitecture}
\usage{
ripmmarc(img, mask, patchRadius = 3, patchSamples = 1000,
  patchVarEx = 0.95, meanCenter = FALSE, canonicalFrame = NA,
  evecBasis = NA, verbose = FALSE)
}
\arguments{
\item{img}{Image to decompose}

\item{mask}{Binary mask defining regions in which to decompose.}

\item{patchRadius}{Scalar radius defining the patch size.}

\item{patchSamples}{Scalar defining the number of random patches to sample.}

\item{patchVarEx}{Scalar defining the target variance explained.  If this is
greater than one, then it defines the number of eigenvectors.  Otherwise, it
defines the target variance explained.}

\item{meanCenter}{boolean whether we mean center the patches.}

\item{canonicalFrame}{pass in an existing canonicalFrame.}

\item{evecBasis}{pass in an existing eigenvector basis.}

\item{verbose}{boolean sets verbosity.}
}
\value{
list including the canonical frame, the matrix basis, the patches for
the full image, the projection coefficients for the full image, the
variance explained and a reconstructed image.
}
\description{
Patch-based and rotation invariant image decomposition.  This
is similar to patch-based dictionary learning in N-dimensions.
}
\examples{
img <- antsImageRead( getANTsRData( "r16" ) )
msk <- thresholdImage( img, quantile( img[ img > 0 ] )[1], max( img ) )
ripped <- ripmmarc( img, msk, patchRadius=3, patchSamples=2000, patchVarEx=0.95  )
# img[ msk == 1 ] = ripped$evecCoeffs[2,]; plot( img )
ripped <- ripmmarc( img, msk, patchRadius=3, patchSamples=2000, patchVarEx=4  )
ripped2 <- ripmmarc( img, msk, patchRadius=3, patchSamples=2000,
  canonicalFrame = ripped$canonicalFrame,
  evecBasis = ripped$basisMat )
\dontrun{
ripped <- ripmmarc( img, msk, patchRadius=3, patchSamples=2000, patchVarEx=10 )
mm = thresholdImage( abs( ripped$canonicalFrame ), 1.e-20, Inf )
mm2 = antsImageClone( mm )
for (k in 1:nrow( ripped$basisMat ) ) {
  mm2[mm==1] =  ripped$basisMat[k,]
  plot( mm2, doCropping=F )
  }
}
}
\author{
Kandel BM, Avants BB
}

