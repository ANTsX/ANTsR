#!/bin/bash
CXX_STD=CXX11
ITKRCMAKE=`${R_DIR}Rscript -e 'a<-ITKR:::itkIncludes(); cat(a)'`
ITKRLIB=`${R_DIR}Rscript -e 'a<-ITKR:::itkLibs(); cat(a)'`
compflags=`${R_DIR}Rscript -e 'a<-ITKR:::itkCompileFlags(); cat(a)'`
ITKDIR=`${R_DIR}Rscript -e 'a<-ITKR:::itkDir(); cat(a)'`

# get a version of cmake
cmaker=`which cmake`
if [[ ! -x $cmaker ]] ; then # try r version
  cmaker=`${R_HOME}/bin/Rscript -e 'a<-cmaker::cmake()'`
fi
if [[ `uname` -eq Darwin ]] ; then
  CMAKE_BUILD_TYPE=Release
fi
if [[ $TRAVIS -eq true ]] ; then
  CMAKE_BUILD_TYPE=Release
fi

gitcmd=`which git`
if [[ ! -x $gitcmd ]] ; then # try install git
  apt-get install -y git-core
fi
gitcmd=`which git`
if [[ ! -x $gitcmd ]] ; then # try install git
  exit 1
fi

cd ./src
# platform-specific Makevars
echo "myantssource=\${PWD}/ants/" > Makevars
echo "ITK = \`\$(R_HOME)/bin/Rscript -e 'ITKR:::itkIncludes()'\`" >> Makevars
needVCL_CAN_STATIC_CONST_INIT_FLOAT=0
if [[ ${#CC} -gt 0 ]] ; then # test the requested compiler
  temp=$(${CC} --version | grep clang)
  if [[ ${#temp} -gt 0 ]] ; then
    needVCL_CAN_STATIC_CONST_INIT_FLOAT=1
  fi
else # just try gcc directly
  temp=$(gcc --version | grep clang)
  if [[ ${#temp} -gt 0 ]] ; then
    needVCL_CAN_STATIC_CONST_INIT_FLOAT=1
  fi
fi
echo $OSTYPE $needVCL_CAN_STATIC_CONST_INIT_FLOAT
if [[ ${needVCL_CAN_STATIC_CONST_INIT_FLOAT} -eq 1 ]]; then
echo "PKG_CPPFLAGS = -I\${ITK} -I\${PWD} -I\${myantssource}/Examples/include/ \
  -I\${myantssource}/Utilities -I\${myantssource}/Examples/ -I../inst/include/\
  -I\${myantssource}/Tensor/ " >> Makevars
else
echo "PKG_CPPFLAGS = -I\${ITK} -I\${PWD} -I\${myantssource}/Examples/include/ \
  -I\${myantssource}/Utilities -I\${myantssource}/Examples/ -I../inst/include\
  -I\${myantssource}/Tensor/" >> Makevars
fi

echo "CXX_STD = CXX11" >> Makevars

echo "myantslib=\${PWD}/antb/lib/" >> Makevars

echo "libants=\`find \${myantslib} -name \"lib*.a\"\`" >> Makevars

echo "libitk=\`find \\\`\$(R_HOME)/bin/Rscript -e 'ITKR:::itkLibs()'\\\` -name \"lib*.a\"\` " >> Makevars

echo "PKG_LIBS = \${libitk}  \${libants} \${libitk} \${libants} \${libitk} \
                 \${libants} \${libitk} \${libants} \${itklib}  \${libants} \
                 \${libitk} \${libants} \${itklib}   \${libants} \${itklib} \
                 \${libants} \${libitk} \${libants} \${itklib}" >> Makevars

echo ".PHONY: all libs" >> Makevars

echo "all: \$(SHLIB)" >> Makevars

echo "\$(SHLIB): libs" >> Makevars

echo "tlibs: ; cd \${PWD}/antb" >> Makevars

echo "libs: ; cd \${PWD}/antb && \$(MAKE) -j 2" >> Makevars

#  cat Makevars.in >> Makevars

# get / set up ANTs code
antsgit=https://github.com/stnava/ANTs.git
antstag=1a3807fa2df5043ad9128c83dc56960dbaa0848e # add jlf
if [[ ! -s ants/CMakeLists.txt  ]] ; then
    git clone $antsbranch $antsgit ants
fi
cd ants
if [[ -d .git ]]; then
    git checkout master;  git pull;  git checkout $antstag
fi
cd ../
if [[ ! -s antb ]] ; then
  mkdir antb
fi
cd ./antb
${cmaker} -DITK_DIR:PATH=${ITKDIR} \
    -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} ${compflags} -DNDEBUG  "\
    -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} ${compflags} -DNDEBUG  "\
    -DBUILD_SHARED_LIBS=OFF \
    -DBUILD_ALL_ANTS_APPS=OFF \
    -DUSE_SYSTEM_ITK=OFF \
    -DBUILD_TESTING=OFF \
    -DCOPY_SCRIPT_FILES_TO_BIN_DIR=OFF \
    -DCMAKE_BUILD_TYPE:STRING="${CMAKE_BUILD_TYPE}"  ../ants
cd ../
